name: Build and distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install java
        if: steps.check_java.outputs.installed == 'false'
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
          cache: "gradle"

      - name: Check flutter found
        id: check_flutter
        shell: bash
        run: |
          if flutter --version; then
              echo "installed=false" >> "$GITHUB_OUTPUT"
          else
              echo "installed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup flutter
        if: steps.check_flutter.outputs.installed == 'false'
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - run: flutter --version
        shell: bash

      - name: Decode keystore and create jks and properties file for signing the app
        shell: bash
        run: |
          echo "$KEYSTORE" | base64 --decode > app/keystore.jks
          echo "storeFile=keystore.jks" >> key.properties
          echo "keyAlias=upload" >> key.properties
          echo "storePassword=$KEYSTORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_PASSWORD" >> key.properties
        env:
          KEYSTORE: ${{ secrets.ANDROID_RELEASE_KEY }}
          KEYSTORE_PASSWORD: "${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }}"
        working-directory: ./android

      - name: Build
        run: flutter build apk --release
        shell: bash
        working-directory: ./


      - name: Archive APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          # Try running the build locally with the build command to be sure of this path
          path: build/app/outputs/flutter-apk/app-dev-release.apk